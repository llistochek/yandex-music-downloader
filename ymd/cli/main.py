from pathlib import Path

import typer
from rich.console import Console
from rich.table import Table

from ymd.cli.options.download import (
    DownloadQuality,
    DownloadTypeArgument,
    OnlyMusicOption,
    QualityOption,
    StickToArtistOption,
    TargetOption,
    TokenOption,
)
from ymd.cli.options.file_managing import (
    DownloadDirectoryOption,
    PathPatternOption,
    SkipExistingOption,
    UnsafePathOption,
)
from ymd.cli.options.metadata import (
    CoverResolutionOption,
    EmbedCoverOption,
    LyricsFormat,
    LyricsFormatOption,
    TagsCompatibility,
    TagsCompatibilityOption,
)
from ymd.cli.options.network import (
    RequestsDelayOption,
    ResponseTimeoutOption,
)

app = typer.Typer(
    add_completion=False,
    no_args_is_help=True,
)

DEFAULT_DOWNLOAD_DIR = Path(".")

# Doc string —Ñ—É–Ω–∫—Ü–∏–∏ - –≤—ã–≤–æ–¥–∏—Ç—Å—è –≤ --help —Å–ø—Ä–∞–≤–∫–µ
def main(
        # –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
        type: DownloadTypeArgument,
        target: TargetOption,
        token: TokenOption,

        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏
        quality: QualityOption = DownloadQuality.mp3_320,
        stick_to_artist: StickToArtistOption = False,
        only_music: OnlyMusicOption = False,
        
        # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        lyrics_format: LyricsFormatOption = LyricsFormat.none,
        embed_cover: EmbedCoverOption = False,
        cover_resolution: CoverResolutionOption = "400",
        tags_compatibility: TagsCompatibilityOption = TagsCompatibility.m4a_compatible,

        # –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏
        download_dir: DownloadDirectoryOption = DEFAULT_DOWNLOAD_DIR,
        skip_existing: SkipExistingOption = False,
        path_pattern: PathPatternOption = "{artist}/{album}/{title}",
        unsafe_path: UnsafePathOption = False,

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏
        delay: RequestsDelayOption = 0,
        response_timeout: ResponseTimeoutOption = 20,
    ):
    """
        üéµ yandex-music-downloader - –ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å –º—É–∑—ã–∫—É —Å –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∏

        üìö –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
            

        ymd url https://music.yandex.ru/album/123456 --token YOUR_TOKEN
    """


    console = Console()

    table = Table(title="üé∂ Yandex Music Download Options", show_header=True, header_style="bold magenta")
    table.add_column("üìù Option", style="dim", width=18)
    table.add_column("üî¢\tValue", style="bold")

    # –û—Å–Ω–æ–≤–Ω—ã–µ
    table.add_section()
    table.add_row("üéØ  Target", f"{target}")
    table.add_row("üìÇ  Target Type", f"{type}")
    table.add_row("üîë  Token", f"{token}")

    # –ó–∞–≥—Ä—É–∑–∫–∞  
    table.add_section()
    table.add_row("üéº  Quality", f"{quality}")
    table.add_row("üéè  Skip Existing", f"{skip_existing}")
    table.add_row("üìÅ  Directory", f"{download_dir}")
    table.add_row("üìù  Stick to Artist", f"{stick_to_artist}")
    table.add_row("üéµ  Only Music", f"{only_music}")

    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    table.add_section()
    table.add_row("üì∑  Embed Cover", f"{embed_cover}")
    table.add_row("üñºÔ∏è  Cover Resolution", f"{cover_resolution}")
    table.add_row("üìù  Lyrics Format", f"{lyrics_format}")
    table.add_row("üè∑Ô∏è  Tags Compatibility", f"{tags_compatibility}")

    # –°–µ—Ç—å
    table.add_section()
    table.add_row("üìÖ  Delay", f"{delay}")   
    table.add_row("‚è≥  Response Timeout", f"{response_timeout}")

    # –ü—É—Ç—å –∏ —à–∞–±–ª–æ–Ω
    table.add_section()
    table.add_row("üìÇ  Download Directory", f"{download_dir}")
    table.add_row("üìù  Path Pattern", f"{path_pattern}")
    table.add_row("üîí  Unsafe Path", f"{unsafe_path}")

    console.print(table)

def run():
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ñ–ª–∞–≥–∞–º–∏ –∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
    typer.run(main)
